{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Notes","text":"<p>This site is a collection of my personal notes on various topics, including software engineering, UML diagrams, and test automation. I use Obsidian to manage my notes and MkDocs to publish them as a static site on GitHub Pages.</p>"},{"location":"#explore-the-notes","title":"Explore the Notes","text":"<ul> <li>[[Methodology for Publishing Obsidian Notes with MkDocs and GitHub Pages]]</li> <li>UML Class Diagram - Library Resource Management System</li> </ul>"},{"location":"#about-this-site","title":"About This Site","text":"<p>This site is generated using MkDocs and automatically published via GitHub Pages. The notes are managed in Obsidian and synchronized using a custom script.</p>"},{"location":"#methodology","title":"Methodology","text":"<p>To learn more about how this site is built and published, visit the Methodology page.</p>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/","title":"Methodology for Publishing Obsidian Notes with MkDocs and GitHub Pages","text":"<p>This document describes the methodology used to publish notes from an Obsidian vault to a static site hosted on GitHub Pages, using MkDocs for site generation and automation scripts for synchronization.</p>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#overview","title":"Overview","text":"<ul> <li>Obsidian Vault: Located at <code>/Users/rauros/Publish</code>, contains Markdown notes and images.</li> <li>MkDocs Project: Located at <code>/Users/rauros/Publish/mkdocs-site</code>, configured to generate a static site from the notes.</li> <li>GitHub Repository: <code>rauros.github.io</code>, where the generated site is pushed and served via GitHub Pages.</li> <li>Automation: A script (<code>watch.sh</code>) runs <code>publish.sh</code> to copy notes, build the site, and push to GitHub.</li> </ul>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#process-flow","title":"Process Flow","text":"<ol> <li>Edit Notes: Notes are edited in Obsidian.</li> <li>Run <code>watch.sh</code>: Executes <code>publish.sh</code> to:</li> <li>Copy Markdown notes and images from the vault to <code>/Users/rauros/Publish/mkdocs-site/docs</code>.</li> <li>Build the site using MkDocs.</li> <li>Commit and push the generated site to the <code>rauros.github.io</code> repository.</li> <li>GitHub Pages: Serves the site at <code>https://rauros94.github.io/</code>.</li> </ol>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#diagram","title":"Diagram","text":"<p>Below is a flowchart illustrating the process:</p> <pre><code>graph TD\n    A[Edit Notes in Obsidian] --&gt; B[Run watch.sh]\n    B --&gt; C[Execute publish.sh]\n    C --&gt; D[Copy Notes to MkDocs docs/]\n    C --&gt; E[Build Site with MkDocs]\n    C --&gt; F[Push to GitHub Repository]\n    F --&gt; G[Site Published on GitHub Pages]\n</code></pre>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#configuration-details","title":"Configuration Details","text":"<ul> <li>MkDocs Theme: Material for MkDocs with dark mode enabled.</li> <li>Automation:\u00a0watch.sh\u00a0executes\u00a0publish.sh\u00a0to automate the process.</li> <li>GitHub Actions: Not used; local scripts handle the automation.</li> </ul>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#challenges-and-solutions","title":"Challenges and Solutions","text":"<ul> <li>Continuous Push Loop: Initially,\u00a0fswatch\u00a0caused infinite loops due to detecting temporary files. Solved by excluding irrelevant directories and files.</li> <li>Configuration Errors: Resolved by consolidating\u00a0mkdocs.yml\u00a0and ensuring correct paths.</li> </ul>"},{"location":"Methodology%20for%20Publishing%20Obsidian%20Notes%20with%20MkDocs%20and%20GitHub%20Pages/#conclusion","title":"Conclusion","text":"<p>This methodology provides a simple, automated way to publish Obsidian notes to a static site, ensuring that changes are reflected quickly and efficiently.</p>"},{"location":"Test%20Automation/","title":"Test Automation","text":"<p>Test of automation 1 Ideally it will be pushed directly to my github rep.</p> <p>Testing the change watcher.</p>"},{"location":"UML-Class-Diagram-Library-Resource-Management-System/","title":"UML Class Diagram Library Resource Management System","text":"<p>Author: Antonio Ortiz Date: 25/04/2025 Degree: Computer Engineering  Subject: Software Engineering Assignment: Activity 1 \u2013 Process Model &amp; Class Design  </p>"},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#context","title":"\ud83e\udde0 Context","text":"<p>This assignment involved the analysis of functional requirements for a university library system and the modeling of its core components using UML class diagrams. The design includes resources (spaces and books), users (students and teachers), and the different types of reservations possible in the system.</p>"},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#uml-class-diagram","title":"\ud83d\uddbc UML Class Diagram","text":"<p>The following UML class diagram represents the designed structure of the library reservation system.</p> <p></p>"},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#class-descriptions","title":"\ud83e\udde9 Class Descriptions","text":"Class Description <code>Space</code> General class representing a physical resource in the library. <code>ReadingSeat</code> Subclass of <code>Space</code>. <code>StudyRoom</code> Subclass of <code>Space</code>. <code>User</code> General class representing any individual who interacts with the library. <code>Student</code> Subclass of <code>User</code>, with the attribute <code>degree : string</code>. <code>Teacher</code> Subclass of <code>User</code>, with the attribute <code>department : string</code>. <code>Book</code> Represents a library book, with attributes <code>fecha : Date</code> and <code>soloLecturaSala : Boolean</code>. Indicates whether the book is restricted to in-room reading only. <code>SpaceReservation</code> Represents the reservation of a space (seat or room) by a user, with attribute <code>Date</code>. <code>RoomReservation</code> Subclass of <code>SpaceReservation</code>, used for study rooms. <code>SeatReservation</code> Subclass of <code>SpaceReservation</code>, used for reading seats. <code>BookReservation</code> Represents a book reservation, with attribute <code>RoomOnly : Boolean</code>. Indicates if a room reservation is required to allow the book reservation."},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#class-hierarchies-generalization","title":"\ud83d\udd17 Class Hierarchies (Generalization)","text":"Generalization Description <code>User</code> &lt;&gt; <code>Student</code> <code>Student</code> is a subclass of <code>User</code>. <code>User</code> &lt;&gt; <code>Teacher</code> <code>Teacher</code> is a subclass of <code>User</code>. <code>Space</code> &lt;&gt; <code>StudyRoom</code> <code>StudyRoom</code> is a subclass of <code>Space</code>. <code>Space</code> &lt;&gt; <code>ReadingSeat</code> <code>ReadingSeat</code> is a subclass of <code>Space</code>. <code>SpaceReservation</code> &lt;&gt; <code>RoomReservation</code> <code>RoomReservation</code> is a subclass of <code>SpaceReservation</code>. <code>SpaceReservation</code> &lt;&gt; <code>SeatReservation</code> <code>SeatReservation</code> is a subclass of <code>SpaceReservation</code>."},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#class-associations","title":"\ud83d\udd17 Class Associations","text":"Association Description <code>Student</code> &lt;&gt; <code>RoomReservation</code> Students can create room reservations. <code>Teacher</code> &lt;&gt; <code>RoomReservation</code> Teachers can create room reservations. <code>User</code> &lt;&gt; <code>SeatReservation</code> Users can reserve reading seats. <code>User</code> &lt;&gt; <code>BookReservation</code> Users can reserve books. <code>SeatReservation</code> &lt;&gt; <code>ReadingSeat</code> Each seat reservation is linked to a specific reading seat. <code>RoomReservation</code> &lt;&gt; <code>StudyRoom</code> Each room reservation is linked to a specific study room. <code>BookReservation</code> &lt;&gt; <code>Book</code> Each book reservation is linked to a specific book. <code>BookReservation</code> &lt;&gt; <code>SeatReservation</code> Book reservations validate the presence of an active seat reservation to allow access to the requested book."},{"location":"UML-Class-Diagram-Library-Resource-Management-System/#summary","title":"\u2705 Summary","text":"<p>This UML class diagram captures a simplified model for a university library resource booking system. It applies object-oriented design principles such as generalization and composition and supports potential rule extension based on user type or resource restrictions.</p>"}]}